<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"
    default-autowire="byName" default-lazy-init="true">

    <context:property-placeholder location="classpath:dubbo.properties" ignore-unresolvable="true" />

	<import resource="classpath:betaa/dataSource.xml" />
	<import resource="classpath:betaa/dataSource_account_old.xml" />
	<import resource="classpath:betaa/dataSource_account.xml" />
	<import resource="classpath:betaa/dataSource_multi.xml" />
	<import resource="classpath:betaa/dataSource_mtkernel.xml" />
    <import resource="classpath:spring/applicationContext-bean.xml" />	
	<import resource="classpath:spring/spring-properties.xml"/>
	<import resource="classpath:spring/spring-dubbo-consumer.xml"/>
	<import resource="classpath:spring/spring-dubbo-consumer_crps.xml"/>
	<import resource="classpath:common/applicationContext-common.xml" />	
	<!-- 开启组件扫描 -->
    <context:component-scan base-package="com.rkylin.settle.*" />
	<!--开启注解处理器-->
    <context:annotation-config />
    
    <bean id="account_db"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
    p:dataSource-ref="accountOldDataSource">
    <qualifier value="account_db"/>
	</bean>
	<bean id="settle_db"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
    p:dataSource-ref="settleDataSource">
    <qualifier value="settle_db"/>
	</bean>	
	<bean id="multi_db"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
    p:dataSource-ref="multiDataSource">
    <qualifier value="multi_db"/>
	</bean>	
	<bean id="mtaegis_db"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
    p:dataSource-ref="accountDataSource">
    <qualifier value="mtaegis_db"/>
	</bean>
    <bean id="mtkernel_db"
	    class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
	    p:dataSource-ref="mtkernelDataSource">
	    <qualifier value="mtkernel_db"/>
	</bean>
    
	
	<!-- 整合mybatis
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="accountDataSource" />
		<property name="configLocation" value="classpath:mybatisConfig.xml" />
	</bean>
	
	<bean class="com.rkylin.database.BaseDao">
		<property name="batchSqlSessionFactory" ref="sqlSessionFactory" />
	</bean> -->
	
	 
</beans>