<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd" >
	<!-- 
		同步上游和下游的交易信息定时任务
	 -->
	<bean id="updateAccountInfoToDetailInfo" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<!--false表示等上一个任务执行完后再开启新的任务-->
		<property name="concurrent" value="false"/>
		<property name="targetObject">
			<ref bean="updateAccToDetailTask"/>
		</property>
		<property name="targetMethod">
			<value>updateAccountInfoToDetailInfo</value>
		</property>
	</bean>
	
	<!-- 
		同步上游和下游的交易信息定时任务 11:00AM
	 -->
	<bean id="updateAccountInfoToDetailInfoTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="updateAccountInfoToDetailInfo" />
		</property>
		<property name="cronExpression">
			<value>0 59 10 * * ?</value>
		</property>
	</bean>
	
	<!-- 
        同步上游和下游的交易信息定时任务
     -->
    <bean id="updateAccountInfoToPosInfo" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!--false表示等上一个任务执行完后再开启新的任务-->
        <property name="concurrent" value="false"/>
        <property name="targetObject">
            <ref bean="updateAccToDetailTask"/>
        </property>
        <property name="targetMethod">
            <value>updateAccountInfoToPosInfo</value>
        </property>
    </bean>
    
    <!-- 
        同步上游和下游的交易信息定时任务
     -->
    <bean id="updateAccountInfoToPosInfoTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="updateAccountInfoToPosInfo" />
        </property>
        <property name="cronExpression">
            <value>0 15 10 * * ?</value>
        </property>
    </bean>
</beans>